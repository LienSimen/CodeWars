using System;
using System.Linq;
using System.Reflection.Metadata.Ecma335;
using System.Xml;

static class Extensions
{
    public static int[] Square(this int[] array)
    {
        if (array.Length > 0)
            return array.Select(n => n * n).ToArray();
        return [];
    }
    public static int[] Cube(this int[] array)
    {
        if (array.Length > 0)
            return array.Select(n => n * n * n).ToArray();
        return [];
    }

    public static double Average(this int[] array)
    {
        if (array.Length > 0)
        {
            double average = (double)array.Aggregate((total, next) => total + next) / array.Length;
            return average;
        }
        return double.NaN;;
    }
    public static int Sum(this int[] array)
    {
        if (array.Length > 0)
        {
            int sum = array.Aggregate((total, next) => total + next);
            return sum;
        }
        return 0;
    }
    public static int[] Even(this int[] array)
    {
        if (array.Length > 0)
            return array.Where(c => c % 2 == 0).ToArray();
        return [];
    }
    public static int[] Odd(this int[] array)
    {
        if (array.Length > 0)
            return array.Where(c => c % 2 != 0).ToArray();
        return [];
    }
}


// var numbers = new int[] { 1, 2, 3, 4, 5 };
// numbers.Square(); // must return [1, 4, 9, 16, 25]
// numbers.Cube(); // must return [1, 8, 27, 64, 125]
// numbers.Average(); // must return 3
// numbers.Sum(); // must return 15
// numbers.Even(); // must return [2, 4]
// numbers.Odd(); // must return [1, 3, 5]
